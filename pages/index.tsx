import Head from "next/head";
import Image from "next/image";

import botaoX from "../assets/botaox.svg";
import botaoVoltar from "../assets/botaoVoltar.svg";
import botaoCoracao from "../assets/botaoCoracao.svg";
import logo from "../assets/logo.svg";

import React, { useEffect } from "react";
import supabase from "../utils/supabase";
import { useRouter } from "next/router";

export default function Home() {
  const [escortCount, setescortCount] = React.useState(0);
  const [AllEscorts, setAllEscorts] = React.useState<Array<any>>([]);

  const [currentGirl, setCurrentGirl] = React.useState<string>();
  const [previousGirl, setPreviousGirl] = React.useState<string>();
  const [nextGirl, setNextGirl] = React.useState<string>();

  const router = useRouter();

  const getAllEscorts = async () => {
    let { data: acompanhantes, error } = await supabase
      .from("acompanhantes")
      .select("*");

    if (acompanhantes) {
      // console.log(acompanhantes);
      setAllEscorts(acompanhantes);
    }
  };

  const getCurrentGirlImage = async () => {
    console.log("length " + AllEscorts.length);
    const { data } = supabase.storage
      .from("photos")
      .getPublicUrl(
        `${AllEscorts[escortCount]?.nome}/${AllEscorts[escortCount]?.nome}001`
      );

    if (data) {
      // console.log(data);
      setCurrentGirl(data?.publicUrl);
    }
  };

  const getPreviousGirlImage = async () => {
    if (escortCount !== 0) {
      const { data } = supabase.storage
        .from("photos")
        .getPublicUrl(
          `${AllEscorts[escortCount - 1]?.nome}/${
            AllEscorts[escortCount - 1]?.nome
          }001`
        );

      if (data) {
        setPreviousGirl(data?.publicUrl);
      }
    } else {
      setPreviousGirl(undefined);
    }
  };

  const getNextGirlImage = async () => {
    // console.log("length " + AllEscorts.length);
    if (escortCount + 1 === AllEscorts.length) {
      setNextGirl(undefined);
    } else {
      const { data } = supabase.storage
        .from("photos")
        .getPublicUrl(
          `${AllEscorts[escortCount + 1]?.nome}/${
            AllEscorts[escortCount + 1]?.nome
          }001`
        );

      if (data) {
        // console.log(data);
        setNextGirl(data?.publicUrl);
      }
    }
  };

  useEffect(() => {
    getCurrentGirlImage();
    getNextGirlImage();
    getPreviousGirlImage();
  }, [escortCount, AllEscorts]);

  useEffect(() => {
    getAllEscorts();
    console.log(screen);
  }, []);

  return (
    <div className="container mx-auto text-black">
      <Head>
        <title>Book Rosa</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="md:grid md:grid-cols-3 md:h-screen">
        <div
          id="garota anterior"
          className="hidden md:flex flex-wrap justify-center items-center abg-[#FF93C6] p-10"
        >
          <h1 className="w-full text-3xl font-semibold text-white my-5 ml-2">
            Anterior
          </h1>
          <div>
            {escortCount === 0 && (
              <div className="flex justify-center items-center text-2xl text-white  w-full h-[600px] rounded-3xl">
                <h1>Vazio</h1>
              </div>
            )}
            {escortCount !== 0 && (
              <div>
                <img
                  src={previousGirl}
                  alt=""
                  className="rounded-3xl h-[600px]"
                />
                <div className="flex items-end z-10 h-5/6 2xl:ml-10 -mt-24 ml-5">
                  <div>
                    <h1 className="relative text-white text-4xl font-semibold">
                      {AllEscorts[escortCount - 1]?.nome}{" "}
                      <span className="text-3xl">
                        {AllEscorts[escortCount - 1]?.idade}
                      </span>
                    </h1>
                    <h3 className="relative text-white text-xl">
                      @{AllEscorts[escortCount - 1]?.social_midia}
                    </h3>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>

        <div id="garota atual" className="bg-white">
          <div className="flex items-center justify-center mt-5">
            <Image src={logo} alt="" width={200} height={100} />
          </div>
          <div
            id="image"
            className="z-0 relative my-10 bg-transparent h-[635px]"
          >
            {/*eslint-disable-next-line @next/next/no-img-element */}
            <div className="flex justify-center">
              <img src={currentGirl} alt="" className="rounded-3xl h-[635px]" />
            </div>

            <div
              id="nome e social"
              className="z-10 flex flex-wrap items-end px-5 -mt-32"
            >
              <div className="flex items-end z-10 h-5/6 2xl:ml-10">
                <div>
                  <h1 className="relative text-white text-4xl font-semibold">
                    {AllEscorts[escortCount]?.nome}{" "}
                    <span className="text-3xl">
                      {AllEscorts[escortCount]?.idade}
                    </span>
                  </h1>
                  <h3 className="relative text-white text-xl">
                    @{AllEscorts[escortCount]?.social_midia}
                  </h3>
                </div>
              </div>

              <div className="grid grid-cols-2 md:grid-cols-2 z-10 mt-5 w-full ">
                <div
                  id="voltar"
                  className="w-full flex justify-start  cursor-pointer"
                  onClick={() => {
                    if (escortCount === 0) {
                      setescortCount(0);
                    } else {
                      let index = escortCount - 1;
                      setescortCount(index);
                    }
                  }}
                >
                  <Image
                    src={botaoVoltar}
                    alt=""
                    className="rounded-full drop-shadow-xl md:hidden"
                    width={90}
                    height={90}
                  />
                  <Image
                    src={botaoVoltar}
                    alt=""
                    className="rounded-full drop-shadow-xl hidden md:block"
                    width={100}
                    height={100}
                  />
                </div>
                <div
                  id="x"
                  onClick={() => {
                    console.log("length " + AllEscorts.length);

                    if (escortCount + 1 === AllEscorts.length) {
                      setescortCount(0);
                    } else {
                      let index = escortCount + 1;
                      setescortCount(index);
                    }
                  }}
                  className="w-full flex justify-end cursor-pointer"
                >
                  <Image
                    src={botaoX}
                    alt=""
                    className="rounded-full drop-shadow-xl md:hidden"
                    width={90}
                    height={90}
                  />

                  <Image
                    src={botaoX}
                    alt=""
                    className="rounded-full drop-shadow-xl hidden md:block"
                    width={100}
                    height={100}
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            onClick={() =>
              router.push(`/profile/${AllEscorts[escortCount]?.id}`)
            }
            className="-mt-10 w-full flex justify-center cursor-pointer"
          >
            <Image
              src={botaoCoracao}
              className="rounded-full drop-shadow-xl md:hidden"
              alt=""
              width={110}
              height={110}
            />
            <Image
              src={botaoCoracao}
              className="rounded-full drop-shadow-xl mt-5 hidden md:block"
              alt=""
              width={150}
              height={150}
            />
          </div>
        </div>
        <div
          id="proxima garota"
          className="hidden md:flex flex-wrap justify-center items-center abg-[#FF93C6] p-10"
        >
          <div>
            <h1 className="w-full text-3xl font-semibold text-white my-5 ml-2">
              Pr√≥xima
            </h1>
            {escortCount + 1 === AllEscorts.length && (
              <div className="flex justify-center items-center text-2xl text-white  w-full h-[600px] rounded-3xl">
                <h1>Vazio</h1>
              </div>
            )}
            {escortCount + 1 < AllEscorts.length && (
              <div>
                <img src={nextGirl} alt="" className="rounded-3xl h-[600px]" />
                <div className="flex items-end z-10 h-5/6 2xl:ml-10 -mt-24 ml-5">
                  <div>
                    <h1 className="relative text-white text-4xl font-semibold">
                      {AllEscorts[escortCount + 1]?.nome}{" "}
                      <span className="text-3xl">
                        {AllEscorts[escortCount + 1]?.idade}
                      </span>
                    </h1>
                    <h3 className="relative text-white text-xl">
                      @{AllEscorts[escortCount + 1]?.social_midia}
                    </h3>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
